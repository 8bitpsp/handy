#ifndef _MENU_H
#define _MENU_H

int  InitMenu();
void DisplayMenu();
void TrashMenu();

#define DISPLAY_MODE_UNSCALED    0
#define DISPLAY_MODE_FIT_HEIGHT  1
#define DISPLAY_MODE_FILL_SCREEN 2

#define JOY 0x10000
#define SPC 0x20000

#define CODE_MASK(x) (x & 0xffff)

#define SPC_MENU                   1

#define CONTROL_ANALOG_UP          0x1000
#define CONTROL_ANALOG_DOWN        0x1001
#define CONTROL_ANALOG_LEFT        0x1002
#define CONTROL_ANALOG_RIGHT       0x1003
#define CONTROL_BUTTON_UP          0x1004
#define CONTROL_BUTTON_DOWN        0x1005
#define CONTROL_BUTTON_LEFT        0x1006
#define CONTROL_BUTTON_RIGHT       0x1007
#define CONTROL_BUTTON_SQUARE      0x1008
#define CONTROL_BUTTON_CROSS       0x1009
#define CONTROL_BUTTON_CIRCLE      0x100A
#define CONTROL_BUTTON_TRIANGLE    0x100B
#define CONTROL_BUTTON_LTRIGGER    0x100C
#define CONTROL_BUTTON_RTRIGGER    0x100D
#define CONTROL_BUTTON_SELECT      0x100E
#define CONTROL_BUTTON_START       0x100F
#define CONTROL_BUTTON_LRTRIGGERS  0x1010
#define CONTROL_BUTTON_STARTSELECT 0x1011

typedef struct
{
  int ShowFps;
  int ControlMode;
  int ClockFreq;
  int DisplayMode;
  int VSync;
  int UpdateFreq;
  int Frameskip;
  int Rotation;
  int SoundEnabled;
} EmulatorOptions;

/* Button map ID's */
const int ButtonMapId[] = 
{
  CONTROL_BUTTON_LRTRIGGERS,
  CONTROL_BUTTON_STARTSELECT,
  CONTROL_ANALOG_UP,       CONTROL_ANALOG_DOWN,
  CONTROL_ANALOG_LEFT,     CONTROL_ANALOG_RIGHT,
  CONTROL_BUTTON_UP,       CONTROL_BUTTON_DOWN,
  CONTROL_BUTTON_LEFT,     CONTROL_BUTTON_RIGHT,
  CONTROL_BUTTON_SQUARE,   CONTROL_BUTTON_CROSS,
  CONTROL_BUTTON_CIRCLE,   CONTROL_BUTTON_TRIANGLE,
  CONTROL_BUTTON_LTRIGGER, CONTROL_BUTTON_RTRIGGER,
  CONTROL_BUTTON_SELECT,   CONTROL_BUTTON_START,
  -1 /* End */
};

#endif // _MENU_H
